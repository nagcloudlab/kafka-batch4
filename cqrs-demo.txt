
//-------------------------------------
Order Service:
//-------------------------------------

CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    user_id VARCHAR(50) NOT NULL,
    total_amount DECIMAL NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

import org.apache.kafka.clients.producer.KafkaTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

@Service
public class OrderService {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Autowired
    private KafkaTemplate<String, OrderPlacedEvent> kafkaTemplate;

    public void placeOrder(String userId, double totalAmount) {
        // Insert the order into PostgreSQL
        jdbcTemplate.update("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)", userId, totalAmount);

        // Create an event and publish it to Kafka
        OrderPlacedEvent event = new OrderPlacedEvent(userId, totalAmount);
        kafkaTemplate.send("order-events", event);
    }
}

public class OrderPlacedEvent {

    private String userId;
    private double totalAmount;

    // Constructor, Getters, and Setters

    public OrderPlacedEvent(String userId, double totalAmount) {
        this.userId = userId;
        this.totalAmount = totalAmount;
    }

    public String getUserId() {
        return userId;
    }

    public double getTotalAmount() {
        return totalAmount;
    }
}


//-------------------------------------
Order History Service:
//-------------------------------------

CREATE KEYSPACE orders_keyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'};

USE orders_keyspace;

CREATE TABLE order_history (
    order_id UUID PRIMARY KEY,
    user_id TEXT,
    total_amount DECIMAL,
    order_date TIMESTAMP
);


import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cassandra.core.cql.CqlTemplate;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import java.util.UUID;

@Service
public class OrderHistoryService {

    @Autowired
    private CqlTemplate cqlTemplate;

    @KafkaListener(topics = "order-events", groupId = "order-history-group")
    public void handleOrderPlaced(ConsumerRecord<String, OrderPlacedEvent> record) {
        OrderPlacedEvent event = record.value();

        // Insert the event data into Cassandra
        cqlTemplate.execute("INSERT INTO orders_keyspace.order_history (order_id, user_id, total_amount, order_date) VALUES (?, ?, ?, toTimestamp(now()))",
                UUID.randomUUID(), event.getUserId(), event.getTotalAmount());
    }
}
