[2024-08-20 17:02:12,862] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:02:12,863] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:10:13,327] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:10:13,327] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:15:13,326] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:15:13,328] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:20:13,323] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:20:13,325] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:25:13,317] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:25:13,319] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:25:15,961] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(JlzQBpfiR4m0Kzmpf1Rdeg),Map(topic1-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:25:15,962] INFO [Controller id=101] New partition creation callback for topic1-0 (kafka.controller.KafkaController)
[2024-08-20 17:25:16,022] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:25:16,022] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:25:16,022] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:26:48,069] DEBUG [Controller id=101] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-08-20 17:26:48,084] INFO [Controller id=101] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-08-20 17:26:48,200] DEBUG [Controller id=101] Read current producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-08-20 17:26:48,214] INFO [Controller id=101] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=102, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-08-20 17:30:13,314] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:30:13,314] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:30:13,317] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:30:13,318] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:35:13,316] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:35:13,316] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:35:13,317] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:35:13,317] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:40:13,310] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:40:13,310] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:40:13,310] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:40:13,310] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:41:09,081] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:41:09,082] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-08-20 17:41:09,084] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:09,086] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:09,090] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:41:09,090] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:41:09,090] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.93:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-20 17:41:09,190] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = Map(topic1-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:41:09,192] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:09,193] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:09,283] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:09,284] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-20 17:41:09,285] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:41:16,694] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(j5IV2et5T-SK1KAkG4zU3A),Map(topic1-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-1 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:41:16,694] INFO [Controller id=101] New partition creation callback for topic1-0,topic1-1 (kafka.controller.KafkaController)
[2024-08-20 17:41:42,253] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:41:42,253] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-08-20 17:41:42,253] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,253] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,382] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = Map(topic1-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:41:42,382] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,383] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,396] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = Map(topic1-1 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:41:42,396] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,397] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,505] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-20 17:41:42,506] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-20 17:41:42,507] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:41:48,300] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(S-PTwwPGQiOoYRvD_DxJsQ),Map(topic1-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-1 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-2 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:41:48,300] INFO [Controller id=101] New partition creation callback for topic1-0,topic1-1,topic1-2 (kafka.controller.KafkaController)
[2024-08-20 17:43:02,925] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:43:02,925] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-08-20 17:43:02,925] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:02,925] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,092] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = Map(topic1-2 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:43:03,093] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=2,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,094] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,105] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = Map(topic1-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:43:03,105] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,105] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,116] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = Map(topic1-1 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:43:03,116] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,116] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,263] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-20 17:43:03,264] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-20 17:43:03,265] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:43:09,265] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(6uL_U6SdTTukLLewJ1W6lA),HashMap(topic1-8 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-29 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-21 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-27 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-2 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-4 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-20 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-7 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-25 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-26 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-18 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-14 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-6 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-15 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-28 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-9 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-3 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-19 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-11 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-23 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-16 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-13 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-10 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-5 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-24 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-1 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-22 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic1-17 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-12 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:43:09,265] INFO [Controller id=101] New partition creation callback for topic1-8,topic1-29,topic1-21,topic1-27,topic1-2,topic1-4,topic1-20,topic1-7,topic1-25,topic1-26,topic1-18,topic1-14,topic1-6,topic1-15,topic1-28,topic1-9,topic1-0,topic1-3,topic1-19,topic1-11,topic1-23,topic1-16,topic1-13,topic1-10,topic1-5,topic1-24,topic1-1,topic1-22,topic1-17,topic1-12 (kafka.controller.KafkaController)
[2024-08-20 17:44:55,642] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:44:55,643] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-08-20 17:44:55,643] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:55,643] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,148] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = HashMap(topic1-26 -> NONE, topic1-8 -> NONE, topic1-29 -> NONE, topic1-2 -> NONE, topic1-14 -> NONE, topic1-20 -> NONE, topic1-11 -> NONE, topic1-23 -> NONE, topic1-5 -> NONE, topic1-17 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:44:56,148] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=5,Replica=102],[Topic=topic1,Partition=8,Replica=102],[Topic=topic1,Partition=20,Replica=102],[Topic=topic1,Partition=29,Replica=102],[Topic=topic1,Partition=11,Replica=102],[Topic=topic1,Partition=23,Replica=102],[Topic=topic1,Partition=26,Replica=102],[Topic=topic1,Partition=17,Replica=102],[Topic=topic1,Partition=14,Replica=102],[Topic=topic1,Partition=2,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,159] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,160] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = HashMap(topic1-18 -> NONE, topic1-21 -> NONE, topic1-27 -> NONE, topic1-9 -> NONE, topic1-24 -> NONE, topic1-12 -> NONE, topic1-6 -> NONE, topic1-15 -> NONE, topic1-0 -> NONE, topic1-3 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:44:56,160] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=15,Replica=101],[Topic=topic1,Partition=12,Replica=101],[Topic=topic1,Partition=21,Replica=101],[Topic=topic1,Partition=3,Replica=101],[Topic=topic1,Partition=0,Replica=101],[Topic=topic1,Partition=24,Replica=101],[Topic=topic1,Partition=6,Replica=101],[Topic=topic1,Partition=27,Replica=101],[Topic=topic1,Partition=9,Replica=101],[Topic=topic1,Partition=18,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,161] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,181] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = HashMap(topic1-4 -> NONE, topic1-28 -> NONE, topic1-19 -> NONE, topic1-10 -> NONE, topic1-7 -> NONE, topic1-25 -> NONE, topic1-16 -> NONE, topic1-13 -> NONE, topic1-1 -> NONE, topic1-22 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:44:56,181] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=22,Replica=103],[Topic=topic1,Partition=13,Replica=103],[Topic=topic1,Partition=1,Replica=103],[Topic=topic1,Partition=28,Replica=103],[Topic=topic1,Partition=4,Replica=103],[Topic=topic1,Partition=16,Replica=103],[Topic=topic1,Partition=19,Replica=103],[Topic=topic1,Partition=10,Replica=103],[Topic=topic1,Partition=7,Replica=103],[Topic=topic1,Partition=25,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,182] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,995] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-20 17:44:56,997] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-20 17:44:56,998] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:45:01,412] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(Om6QtPFvQvqkRfPVLGzlDQ),Map(topic1-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic1-1 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic1-2 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:45:01,413] INFO [Controller id=101] New partition creation callback for topic1-0,topic1-1,topic1-2 (kafka.controller.KafkaController)
[2024-08-20 17:45:13,308] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:45:13,308] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-08-20 17:45:13,309] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:45:25,244] INFO [Controller id=101] New topics: [Set(topic2)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic2,Some(atLXz6YtSXae1FL9H3JTHw),HashMap(topic2-12 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-9 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-3 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-10 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-5 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic2-7 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-4 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-17 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic2-14 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic2-11 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic2-8 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), topic2-13 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-19 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-15 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-16 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-1 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), topic2-6 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-18 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), topic2-2 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-20 17:45:25,244] INFO [Controller id=101] New partition creation callback for topic2-12,topic2-9,topic2-3,topic2-10,topic2-5,topic2-7,topic2-4,topic2-17,topic2-14,topic2-11,topic2-8,topic2-13,topic2-19,topic2-15,topic2-0,topic2-16,topic2-1,topic2-6,topic2-18,topic2-2 (kafka.controller.KafkaController)
[2024-08-20 17:45:41,959] DEBUG [Controller id=101] Delete topics listener fired for topics topic2 to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:45:41,959] INFO [Controller id=101] Starting topic deletion for topics topic2 (kafka.controller.KafkaController)
[2024-08-20 17:45:41,959] INFO [Topic Deletion Manager 101] Handling deletion for topics topic2 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:41,960] INFO [Topic Deletion Manager 101] Deletion of topic topic2 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,329] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = HashMap(topic2-5 -> NONE, topic2-17 -> NONE, topic2-14 -> NONE, topic2-11 -> NONE, topic2-8 -> NONE, topic2-2 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:45:42,330] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic2,Partition=11,Replica=101],[Topic=topic2,Partition=2,Replica=101],[Topic=topic2,Partition=5,Replica=101],[Topic=topic2,Partition=17,Replica=101],[Topic=topic2,Partition=14,Replica=101],[Topic=topic2,Partition=8,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,330] INFO [Topic Deletion Manager 101] Handling deletion for topics topic2 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,352] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = HashMap(topic2-19 -> NONE, topic2-16 -> NONE, topic2-10 -> NONE, topic2-7 -> NONE, topic2-1 -> NONE, topic2-4 -> NONE, topic2-13 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:45:42,352] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic2,Partition=4,Replica=102],[Topic=topic2,Partition=13,Replica=102],[Topic=topic2,Partition=10,Replica=102],[Topic=topic2,Partition=1,Replica=102],[Topic=topic2,Partition=19,Replica=102],[Topic=topic2,Partition=7,Replica=102],[Topic=topic2,Partition=16,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,353] INFO [Topic Deletion Manager 101] Handling deletion for topics topic2 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,362] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = HashMap(topic2-12 -> NONE, topic2-9 -> NONE, topic2-15 -> NONE, topic2-3 -> NONE, topic2-0 -> NONE, topic2-6 -> NONE, topic2-18 -> NONE) (kafka.controller.KafkaController)
[2024-08-20 17:45:42,362] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic2,Partition=0,Replica=103],[Topic=topic2,Partition=9,Replica=103],[Topic=topic2,Partition=15,Replica=103],[Topic=topic2,Partition=18,Replica=103],[Topic=topic2,Partition=3,Replica=103],[Topic=topic2,Partition=12,Replica=103],[Topic=topic2,Partition=6,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,363] INFO [Topic Deletion Manager 101] Handling deletion for topics topic2 (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,921] INFO [Topic Deletion Manager 101] Deletion of topic topic2 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-20 17:45:42,922] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-20 17:45:42,923] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-20 17:50:13,338] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:50:13,340] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-08-20 17:50:13,341] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:55:13,341] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-08-20 17:55:13,343] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
