[2024-08-22 17:01:03,809] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:01:03,812] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:01:03,813] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:01:03,814] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:01:03,814] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:01:03,815] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:01:03,815] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:01:03,815] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:02:35,794] DEBUG [Controller id=101] Delete topics listener fired for topics topic1 to be deleted (kafka.controller.KafkaController)
[2024-08-22 17:02:35,794] INFO [Controller id=101] Starting topic deletion for topics topic1 (kafka.controller.KafkaController)
[2024-08-22 17:02:35,796] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:35,798] INFO [Topic Deletion Manager 101] Deletion of topic topic1 (re)started (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:35,806] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:02:35,806] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:02:35,806] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:02:36,027] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = Map(topic1-1 -> NONE) (kafka.controller.KafkaController)
[2024-08-22 17:02:36,043] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=1,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,044] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,045] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = Map(topic1-2 -> NONE) (kafka.controller.KafkaController)
[2024-08-22 17:02:36,045] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=2,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,045] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,050] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 102: request error = NONE, partition errors = Map(topic1-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-22 17:02:36,051] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=topic1,Partition=0,Replica=102] (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,051] INFO [Topic Deletion Manager 101] Handling deletion for topics topic1 (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,218] INFO [Topic Deletion Manager 101] Deletion of topic topic1 successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-22 17:02:36,220] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-22 17:02:36,220] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-22 17:02:45,687] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(GDqTYxuNSkGgcjoo8DYOFA),Map(topic1-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-22 17:02:45,687] INFO [Controller id=101] New partition creation callback for topic1-0 (kafka.controller.KafkaController)
[2024-08-22 17:03:00,736] INFO [Controller id=101] New topics: [Set(__transaction_state)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__transaction_state,Some(jmRC0UUeS5yYo6vKCzNdmw),HashMap(__transaction_state-42 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-7 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-13 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-0 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-37 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-6 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-32 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-18 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-40 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-31 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-45 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-15 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-12 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-46 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-48 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-49 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-28 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-2 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-20 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-24 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-3 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-21 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-29 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-39 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-38 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-14 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-10 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-44 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-9 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-22 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-43 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-4 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-30 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-33 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-25 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-17 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-23 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-47 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-26 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-36 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __transaction_state-5 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-8 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __transaction_state-16 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-11 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-19 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-27 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __transaction_state-41 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __transaction_state-1 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __transaction_state-34 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __transaction_state-35 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-22 17:03:00,737] INFO [Controller id=101] New partition creation callback for __transaction_state-42,__transaction_state-7,__transaction_state-13,__transaction_state-0,__transaction_state-37,__transaction_state-6,__transaction_state-32,__transaction_state-18,__transaction_state-40,__transaction_state-31,__transaction_state-45,__transaction_state-15,__transaction_state-12,__transaction_state-46,__transaction_state-48,__transaction_state-49,__transaction_state-28,__transaction_state-2,__transaction_state-20,__transaction_state-24,__transaction_state-3,__transaction_state-21,__transaction_state-29,__transaction_state-39,__transaction_state-38,__transaction_state-14,__transaction_state-10,__transaction_state-44,__transaction_state-9,__transaction_state-22,__transaction_state-43,__transaction_state-4,__transaction_state-30,__transaction_state-33,__transaction_state-25,__transaction_state-17,__transaction_state-23,__transaction_state-47,__transaction_state-26,__transaction_state-36,__transaction_state-5,__transaction_state-8,__transaction_state-16,__transaction_state-11,__transaction_state-19,__transaction_state-27,__transaction_state-41,__transaction_state-1,__transaction_state-34,__transaction_state-35 (kafka.controller.KafkaController)
[2024-08-22 17:06:03,805] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:06:03,806] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:06:03,807] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:11:03,802] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:11:03,803] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:11:03,803] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:11:03,803] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:11:03,804] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:11:03,804] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:11:03,804] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:11:03,804] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:16:03,799] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:16:03,799] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:16:03,800] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:21:03,794] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:21:03,794] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:21:03,794] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:21:03,794] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:21:03,795] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:21:03,795] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:21:03,795] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:21:03,795] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:25:04,889] INFO [Controller id=101] New topics: [Set(transactions)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(transactions,Some(rLvcUYFASZSzU3GHNrqazQ),Map(transactions-0 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), transactions-1 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), transactions-2 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-22 17:25:04,889] INFO [Controller id=101] New partition creation callback for transactions-0,transactions-1,transactions-2 (kafka.controller.KafkaController)
[2024-08-22 17:25:04,941] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:25:04,941] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:25:04,941] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-22 17:26:03,790] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:26:03,792] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:26:03,793] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:31:03,796] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:31:03,797] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:33:34,590] INFO [Controller id=101] New topics: [HashSet(large-transactions)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(large-transactions,Some(rfsfy64kRQuSi_RK8UOkFw),Map(large-transactions-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-22 17:33:34,590] INFO [Controller id=101] New partition creation callback for large-transactions-0 (kafka.controller.KafkaController)
[2024-08-22 17:36:03,791] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:36:03,791] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:36:03,792] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:41:03,790] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:41:03,790] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:41:03,791] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:46:03,784] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:46:03,786] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:46:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:46:03,787] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:46:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:46:03,787] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:46:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:46:03,788] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:51:03,784] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:51:03,786] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:51:03,787] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:56:03,785] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-22 17:56:03,787] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-22 17:56:03,788] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:56:03,789] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:56:03,789] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:56:03,789] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-22 17:56:03,789] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-22 17:56:03,789] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
