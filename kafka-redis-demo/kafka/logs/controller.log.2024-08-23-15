[2024-08-23 15:23:25,401] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-08-23 15:23:25,450] INFO [Controller id=101] 101 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-08-23 15:23:25,454] INFO [Controller id=101] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-08-23 15:23:25,491] INFO [Controller id=101] Registering handlers (kafka.controller.KafkaController)
[2024-08-23 15:23:25,494] INFO [Controller id=101] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-08-23 15:23:25,497] INFO [Controller id=101] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-08-23 15:23:25,499] INFO [Controller id=101] Initializing controller context (kafka.controller.KafkaController)
[2024-08-23 15:23:25,521] INFO [Controller id=101] Initialized broker epochs cache: HashMap(101 -> 25) (kafka.controller.KafkaController)
[2024-08-23 15:23:25,526] DEBUG [Controller id=101] Register BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-08-23 15:23:25,530] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-08-23 15:23:25,536] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-08-23 15:23:25,537] INFO [Controller id=101] Currently active brokers in the cluster: Set(101) (kafka.controller.KafkaController)
[2024-08-23 15:23:25,538] INFO [Controller id=101] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-08-23 15:23:25,538] INFO [Controller id=101] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-08-23 15:23:25,538] INFO [Controller id=101] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-08-23 15:23:25,541] INFO [Controller id=101] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,541] INFO [Controller id=101] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,541] INFO [Controller id=101] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-08-23 15:23:25,542] INFO [Topic Deletion Manager 101] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-08-23 15:23:25,543] INFO [Controller id=101] Sending update metadata request (kafka.controller.KafkaController)
[2024-08-23 15:23:25,557] INFO [ReplicaStateMachine controllerId=101] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-08-23 15:23:25,557] INFO [ReplicaStateMachine controllerId=101] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-08-23 15:23:25,561] INFO [ReplicaStateMachine controllerId=101] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-08-23 15:23:25,561] DEBUG [ReplicaStateMachine controllerId=101] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-08-23 15:23:25,561] INFO [PartitionStateMachine controllerId=101] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-08-23 15:23:25,562] INFO [PartitionStateMachine controllerId=101] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-08-23 15:23:25,565] DEBUG [PartitionStateMachine controllerId=101] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-08-23 15:23:25,566] INFO [Controller id=101] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-08-23 15:23:25,566] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-23 15:23:25,571] INFO [Controller id=101] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,571] INFO [Controller id=101] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,571] INFO [Controller id=101] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,572] INFO [Controller id=101] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-08-23 15:23:25,573] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-08-23 15:23:25,594] INFO [Controller id=101] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-08-23 15:23:25,672] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-23 15:23:30,597] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:23:30,597] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:23:45,675] INFO [Controller id=101] Newly added brokers: 102, deleted brokers: , bounced brokers: , all live brokers: 101,102 (kafka.controller.KafkaController)
[2024-08-23 15:23:45,676] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-08-23 15:23:45,679] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-08-23 15:23:45,680] INFO [Controller id=101] New broker startup callback for 102 (kafka.controller.KafkaController)
[2024-08-23 15:23:45,686] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-23 15:23:45,687] DEBUG [Controller id=101] Register BrokerModifications handler for List(102) (kafka.controller.KafkaController)
[2024-08-23 15:23:45,690] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 25, 102 -> 45) (kafka.controller.KafkaController)
[2024-08-23 15:23:45,719] INFO [ControllerEventThread controllerId=102] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-08-23 15:23:45,730] DEBUG [Controller id=102] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-08-23 15:23:45,789] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-23 15:23:45,891] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-23 15:23:59,896] INFO [Controller id=101] Newly added brokers: 103, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-08-23 15:23:59,897] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-08-23 15:23:59,900] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-08-23 15:23:59,901] INFO [Controller id=101] New broker startup callback for 103 (kafka.controller.KafkaController)
[2024-08-23 15:23:59,902] DEBUG [Controller id=101] Register BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-08-23 15:23:59,904] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 25, 102 -> 45, 103 -> 61) (kafka.controller.KafkaController)
[2024-08-23 15:23:59,904] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-23 15:23:59,938] INFO [ControllerEventThread controllerId=103] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-08-23 15:23:59,949] DEBUG [Controller id=103] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-08-23 15:24:00,010] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-23 15:24:00,114] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-23 15:24:47,011] INFO [Controller id=101] New topics: [Set(connect-offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-offsets,Some(TpClwRrDSUeeK0uVNend_w),HashMap(connect-offsets-20 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-6 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-17 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-15 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-7 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-24 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-16 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-3 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-21 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-11 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-10 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-2 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-18 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-23 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-4 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-12 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-5 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-13 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-14 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-8 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-offsets-9 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-offsets-1 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-19 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-offsets-22 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-23 15:24:47,013] INFO [Controller id=101] New partition creation callback for connect-offsets-20,connect-offsets-6,connect-offsets-17,connect-offsets-15,connect-offsets-7,connect-offsets-24,connect-offsets-16,connect-offsets-3,connect-offsets-21,connect-offsets-11,connect-offsets-10,connect-offsets-2,connect-offsets-18,connect-offsets-23,connect-offsets-4,connect-offsets-12,connect-offsets-5,connect-offsets-13,connect-offsets-14,connect-offsets-0,connect-offsets-8,connect-offsets-9,connect-offsets-1,connect-offsets-19,connect-offsets-22 (kafka.controller.KafkaController)
[2024-08-23 15:24:48,290] INFO [Controller id=101] New topics: [Set(connect-status)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-status,Some(5CV67tOLRcu9lcoFt1zoJA),HashMap(connect-status-4 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=), connect-status-3 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-status-2 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=), connect-status-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=), connect-status-1 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-23 15:24:48,290] INFO [Controller id=101] New partition creation callback for connect-status-4,connect-status-3,connect-status-2,connect-status-0,connect-status-1 (kafka.controller.KafkaController)
[2024-08-23 15:24:48,709] INFO [Controller id=101] New topics: [Set(connect-configs)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(connect-configs,Some(LrT9ixmiSs2itkO3HsqYpg),Map(connect-configs-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-23 15:24:48,709] INFO [Controller id=101] New partition creation callback for connect-configs-0 (kafka.controller.KafkaController)
[2024-08-23 15:24:48,915] INFO [Controller id=101] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(xa2MiGLOSEOinDF3Ok-WfQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-23 15:24:48,915] INFO [Controller id=101] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-08-23 15:28:30,600] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:28:30,603] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:28:30,610] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:28:30,613] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:28:30,613] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:28:30,613] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:28:30,613] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:28:30,613] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:33:07,368] INFO [Controller id=101] New topics: [HashSet(test-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic,Some(s92M7wi5QUKp8-m_-FTmEw),Map(test-topic-0 -> ReplicaAssignment(replicas=102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-23 15:33:07,369] INFO [Controller id=101] New partition creation callback for test-topic-0 (kafka.controller.KafkaController)
[2024-08-23 15:33:30,612] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:33:30,615] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:33:30,617] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:38:30,642] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:38:31,195] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:38:31,282] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:43:31,281] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:43:31,284] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:43:31,286] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:43:31,286] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:43:31,286] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:43:31,287] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:43:31,287] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:43:31,287] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:48:31,284] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:48:31,286] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:48:31,287] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:48:31,287] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:48:31,287] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:48:31,287] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:48:31,288] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:48:31,288] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:53:31,286] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:53:31,289] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:53:31,291] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:53:31,292] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:53:31,292] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:53:31,292] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:53:31,292] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:53:31,292] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:58:31,246] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-23 15:58:31,247] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-23 15:58:31,247] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:58:31,248] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:58:31,248] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:58:31,248] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-23 15:58:31,248] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-23 15:58:31,248] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
