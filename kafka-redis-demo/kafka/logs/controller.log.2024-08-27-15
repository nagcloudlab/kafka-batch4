[2024-08-27 15:03:19,773] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:03:19,775] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:03:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:06:28,741] INFO [Controller id=101] New topics: [Set(_schemas)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(_schemas,Some(d6ncmBBWTFGf_75BKvlzdQ),Map(_schemas-0 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:06:28,742] INFO [Controller id=101] New partition creation callback for _schemas-0 (kafka.controller.KafkaController)
[2024-08-27 15:06:28,804] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:06:28,805] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:06:28,804] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:06:29,411] INFO [Controller id=101] New topics: [Set(_schema_encoders)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(_schema_encoders,Some(3XroM3C1TfyDS4o3_lkJ0g),Map(_schema_encoders-0 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:06:29,411] INFO [Controller id=101] New partition creation callback for _schema_encoders-0 (kafka.controller.KafkaController)
[2024-08-27 15:06:33,524] INFO [Controller id=101] New topics: [HashSet(_dek_registry_keys)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(_dek_registry_keys,Some(TY-G7qgFRTKakkoQP1mnPg),Map(_dek_registry_keys-0 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:06:33,525] INFO [Controller id=101] New partition creation callback for _dek_registry_keys-0 (kafka.controller.KafkaController)
[2024-08-27 15:08:01,088] DEBUG [Controller id=101] Delete topics listener fired for topics user-topic to be deleted (kafka.controller.KafkaController)
[2024-08-27 15:08:01,089] INFO [Controller id=101] Starting topic deletion for topics user-topic (kafka.controller.KafkaController)
[2024-08-27 15:08:01,091] INFO [Topic Deletion Manager 101] Handling deletion for topics user-topic (kafka.controller.TopicDeletionManager)
[2024-08-27 15:08:01,093] INFO [Topic Deletion Manager 101] Deletion of topic user-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-08-27 15:08:01,241] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 101: request error = NONE, partition errors = Map(user-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-27 15:08:01,243] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=user-topic,Partition=0,Replica=101] (kafka.controller.TopicDeletionManager)
[2024-08-27 15:08:01,243] INFO [Topic Deletion Manager 101] Handling deletion for topics user-topic (kafka.controller.TopicDeletionManager)
[2024-08-27 15:08:01,353] INFO [Topic Deletion Manager 101] Deletion of topic user-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-27 15:08:01,355] INFO [Controller id=101] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-27 15:08:01,355] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-27 15:08:01,426] INFO [Controller id=101] New topics: [HashSet(user-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(user-topic,Some(nkji9_cfT8-wclSZHj7nug),Map(user-topic-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:08:01,426] INFO [Controller id=101] New partition creation callback for user-topic-0 (kafka.controller.KafkaController)
[2024-08-27 15:08:19,774] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:08:19,774] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:08:19,775] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:08:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:08:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:08:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:08:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:08:19,776] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:13:19,773] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:13:19,774] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:13:19,776] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:13:19,777] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:13:19,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:13:19,777] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:13:19,777] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:13:19,777] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:18:19,775] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:18:19,776] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:18:19,778] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:18:29,121] INFO [Controller id=101] New topics: [HashSet(users)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(users,Some(osPnqpPPQ_utTBEJiz-XVQ),Map(users-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:18:29,122] INFO [Controller id=101] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2024-08-27 15:18:29,199] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:18:29,199] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:18:29,199] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:18:29,209] DEBUG [Controller id=101] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-08-27 15:18:29,267] INFO [Controller id=101] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-08-27 15:18:46,732] DEBUG [Controller id=101] Delete topics listener fired for topics user-topic to be deleted (kafka.controller.KafkaController)
[2024-08-27 15:18:46,732] INFO [Controller id=101] Starting topic deletion for topics user-topic (kafka.controller.KafkaController)
[2024-08-27 15:18:46,733] INFO [Topic Deletion Manager 101] Handling deletion for topics user-topic (kafka.controller.TopicDeletionManager)
[2024-08-27 15:18:46,733] INFO [Topic Deletion Manager 101] Deletion of topic user-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-08-27 15:18:46,887] DEBUG [Controller id=101] Delete topic callback invoked on StopReplica response received from broker 103: request error = NONE, partition errors = Map(user-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-08-27 15:18:46,888] DEBUG [Topic Deletion Manager 101] Deletion successfully completed for replicas [Topic=user-topic,Partition=0,Replica=103] (kafka.controller.TopicDeletionManager)
[2024-08-27 15:18:46,888] INFO [Topic Deletion Manager 101] Handling deletion for topics user-topic (kafka.controller.TopicDeletionManager)
[2024-08-27 15:18:47,002] INFO [Topic Deletion Manager 101] Deletion of topic user-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-08-27 15:18:47,004] INFO [Controller id=101] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-08-27 15:18:47,004] DEBUG [Controller id=101] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-08-27 15:18:47,117] INFO [Controller id=101] New topics: [HashSet(user-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(user-topic,Some(MyjpLQpzRKiR1V7zCYWxzA),Map(user-topic-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:18:47,117] INFO [Controller id=101] New partition creation callback for user-topic-0 (kafka.controller.KafkaController)
[2024-08-27 15:23:19,775] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:23:19,800] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:23:19,801] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:23:19,801] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:23:19,802] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:23:19,802] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:23:19,802] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:23:19,802] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:28:19,801] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:28:19,801] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:28:19,802] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:33:19,802] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:33:19,803] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:33:19,805] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:33:19,805] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:33:19,805] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:33:19,806] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:33:19,806] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:33:19,806] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:38:19,733] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:38:19,735] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:38:19,736] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:43:19,729] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:43:19,733] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:43:19,734] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:43:19,734] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:43:19,734] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:43:19,735] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:43:19,735] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:43:19,735] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:48:19,723] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:48:19,725] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:48:19,726] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:49:41,615] INFO [Controller id=101] New topics: [HashSet(my-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-topic,Some(ZKwNs7TkS-W-0x33JCQmmA),Map(my-topic-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:49:41,615] INFO [Controller id=101] New partition creation callback for my-topic-0 (kafka.controller.KafkaController)
[2024-08-27 15:49:41,697] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:49:41,697] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:49:41,697] INFO [RequestSendThread controllerId=101] Controller 101 connected to 192.168.1.75:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-08-27 15:53:19,725] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:53:19,727] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:53:19,728] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:53:19,728] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:53:19,728] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:53:19,729] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:53:19,729] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:53:19,729] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:57:32,604] INFO [Controller id=101] New topics: [HashSet(foo-events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(foo-events,Some(pJr54fsCSH2zIqGew4suHA),Map(foo-events-0 -> ReplicaAssignment(replicas=103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-08-27 15:57:32,605] INFO [Controller id=101] New partition creation callback for foo-events-0 (kafka.controller.KafkaController)
[2024-08-27 15:58:19,719] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-08-27 15:58:19,721] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-08-27 15:58:19,721] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:58:19,722] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:58:19,722] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:58:19,722] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-08-27 15:58:19,722] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-08-27 15:58:19,722] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
