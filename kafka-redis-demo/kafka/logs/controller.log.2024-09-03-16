[2024-09-03 16:34:15,821] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:34:15,855] INFO [Controller id=101] 101 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-09-03 16:34:15,857] INFO [Controller id=101] Registering handlers (kafka.controller.KafkaController)
[2024-09-03 16:34:15,860] INFO [Controller id=101] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-03 16:34:15,862] INFO [Controller id=101] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-03 16:34:15,864] INFO [Controller id=101] Initializing controller context (kafka.controller.KafkaController)
[2024-09-03 16:34:15,877] INFO [Controller id=101] Initialized broker epochs cache: HashMap(101 -> 223) (kafka.controller.KafkaController)
[2024-09-03 16:34:15,895] DEBUG [Controller id=101] Register BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-09-03 16:34:15,937] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:34:15,943] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:34:15,945] INFO [Controller id=101] Currently active brokers in the cluster: Set(101) (kafka.controller.KafkaController)
[2024-09-03 16:34:15,945] INFO [Controller id=101] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-03 16:34:15,945] INFO [Controller id=101] Current list of topics in the cluster: HashSet(_dek_registry_keys, _schema_encoders, _schemas, __consumer_offsets, users) (kafka.controller.KafkaController)
[2024-09-03 16:34:15,945] INFO [Controller id=101] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-03 16:34:15,950] INFO [Controller id=101] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-03 16:34:15,950] INFO [Controller id=101] List of topics ineligible for deletion: _dek_registry_keys,_schema_encoders,__consumer_offsets,_schemas,users (kafka.controller.KafkaController)
[2024-09-03 16:34:15,950] INFO [Controller id=101] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-03 16:34:15,951] INFO [Topic Deletion Manager 101] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(_dek_registry_keys, _schema_encoders, __consumer_offsets, _schemas, users) (kafka.controller.TopicDeletionManager)
[2024-09-03 16:34:15,952] INFO [Controller id=101] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-03 16:34:15,961] INFO [ReplicaStateMachine controllerId=101] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:34:15,967] INFO [ReplicaStateMachine controllerId=101] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:34:15,970] INFO [ReplicaStateMachine controllerId=101] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:34:15,971] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:34:16,082] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:34:16,184] DEBUG [ReplicaStateMachine controllerId=101] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=users,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=_dek_registry_keys,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=_schemas,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica, [Topic=_schema_encoders,Partition=0,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:34:16,185] INFO [PartitionStateMachine controllerId=101] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:34:16,187] INFO [PartitionStateMachine controllerId=101] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:34:16,247] DEBUG [PartitionStateMachine controllerId=101] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, _schemas-0 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, _dek_registry_keys-0 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, _schema_encoders-0 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, users-0 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:34:16,248] INFO [Controller id=101] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-09-03 16:34:16,251] INFO [Controller id=101] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:34:16,251] INFO [Controller id=101] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:34:16,252] INFO [Controller id=101] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-03 16:34:16,252] INFO [Controller id=101] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-03 16:34:16,253] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-03 16:34:16,271] INFO [Controller id=101] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-03 16:34:21,278] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:34:21,278] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:34:21,284] DEBUG [Controller id=101] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-22 -> List(0), __consumer_offsets-30 -> List(0), __consumer_offsets-25 -> List(0), __consumer_offsets-35 -> List(0), __consumer_offsets-37 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-13 -> List(0), _dek_registry_keys-0 -> List(0), __consumer_offsets-8 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-7 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-41 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-23 -> List(0), __consumer_offsets-49 -> List(0), _schemas-0 -> List(0), __consumer_offsets-47 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-31 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), _schema_encoders-0 -> List(0), __consumer_offsets-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), __consumer_offsets-17 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-19 -> List(0), __consumer_offsets-11 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-43 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-44 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), __consumer_offsets-45 -> List(0), __consumer_offsets-1 -> List(0), __consumer_offsets-5 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-29 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-10 -> List(0), users-0 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-40 -> List(0)) (kafka.controller.KafkaController)
[2024-09-03 16:34:21,286] TRACE [Controller id=101] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-03 16:34:21,288] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-03 16:34:32,639] INFO [Controller id=101] Newly added brokers: 102, deleted brokers: , bounced brokers: , all live brokers: 101,102 (kafka.controller.KafkaController)
[2024-09-03 16:34:32,639] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:34:32,642] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:34:32,644] INFO [Controller id=101] New broker startup callback for 102 (kafka.controller.KafkaController)
[2024-09-03 16:34:32,650] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:34:32,685] DEBUG [Controller id=101] Register BrokerModifications handler for List(102) (kafka.controller.KafkaController)
[2024-09-03 16:34:32,687] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 223, 102 -> 295) (kafka.controller.KafkaController)
[2024-09-03 16:34:32,690] INFO [ControllerEventThread controllerId=102] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:34:32,704] DEBUG [Controller id=102] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:34:32,754] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:34:32,855] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:34:42,389] INFO [Controller id=101] Newly added brokers: 103, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-09-03 16:34:42,389] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:34:42,392] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:34:42,392] INFO [Controller id=101] New broker startup callback for 103 (kafka.controller.KafkaController)
[2024-09-03 16:34:42,396] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:34:42,428] DEBUG [Controller id=101] Register BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-09-03 16:34:42,429] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 223, 102 -> 295, 103 -> 311) (kafka.controller.KafkaController)
[2024-09-03 16:34:42,439] INFO [ControllerEventThread controllerId=103] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:34:42,451] DEBUG [Controller id=103] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:34:42,499] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:34:42,602] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,474] INFO [Controller id=101] Shutting down broker 101 (kafka.controller.KafkaController)
[2024-09-03 16:36:09,475] DEBUG [Controller id=101] All shutting down brokers: 101 (kafka.controller.KafkaController)
[2024-09-03 16:36:09,475] DEBUG [Controller id=101] Live brokers: 102,103 (kafka.controller.KafkaController)
[2024-09-03 16:36:09,479] TRACE [Controller id=101] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),_schemas-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-44 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),_dek_registry_keys-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),_schema_encoders-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),users-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) (kafka.controller.KafkaController)
[2024-09-03 16:36:09,581] INFO [ControllerEventThread controllerId=101] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:09,581] INFO [ControllerEventThread controllerId=101] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:09,581] INFO [ControllerEventThread controllerId=101] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:09,582] DEBUG [Controller id=101] Resigning (kafka.controller.KafkaController)
[2024-09-03 16:36:09,582] DEBUG [Controller id=101] Unregister BrokerModifications handler for Set(101, 102, 103) (kafka.controller.KafkaController)
[2024-09-03 16:36:09,583] INFO [PartitionStateMachine controllerId=101] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:36:09,583] INFO [ReplicaStateMachine controllerId=101] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:36:09,584] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,584] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,584] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,585] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,585] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,585] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,586] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,586] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,586] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:36:09,587] INFO [Controller id=101] Resigned (kafka.controller.KafkaController)
[2024-09-03 16:36:21,590] INFO [ControllerEventThread controllerId=102] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:21,591] INFO [ControllerEventThread controllerId=102] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:21,591] INFO [ControllerEventThread controllerId=102] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:36:21,592] DEBUG [Controller id=102] Resigning (kafka.controller.KafkaController)
[2024-09-03 16:36:21,592] DEBUG [Controller id=102] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-03 16:36:21,593] INFO [PartitionStateMachine controllerId=102] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:36:21,594] INFO [ReplicaStateMachine controllerId=102] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:36:21,597] INFO [Controller id=102] Resigned (kafka.controller.KafkaController)
[2024-09-03 16:37:54,551] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:37:54,614] INFO [Controller id=101] 101 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-09-03 16:37:54,623] INFO [Controller id=101] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-09-03 16:37:54,687] INFO [Controller id=101] Registering handlers (kafka.controller.KafkaController)
[2024-09-03 16:37:54,694] INFO [Controller id=101] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-03 16:37:54,699] INFO [Controller id=101] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-03 16:37:54,703] INFO [Controller id=101] Initializing controller context (kafka.controller.KafkaController)
[2024-09-03 16:37:54,739] INFO [Controller id=101] Initialized broker epochs cache: HashMap(101 -> 25) (kafka.controller.KafkaController)
[2024-09-03 16:37:54,748] DEBUG [Controller id=101] Register BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-09-03 16:37:54,759] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:37:54,769] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:37:54,771] INFO [Controller id=101] Currently active brokers in the cluster: Set(101) (kafka.controller.KafkaController)
[2024-09-03 16:37:54,772] INFO [Controller id=101] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-03 16:37:54,773] INFO [Controller id=101] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-03 16:37:54,773] INFO [Controller id=101] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-03 16:37:54,779] INFO [Controller id=101] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,779] INFO [Controller id=101] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,780] INFO [Controller id=101] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-03 16:37:54,780] INFO [Topic Deletion Manager 101] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-09-03 16:37:54,782] INFO [Controller id=101] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-03 16:37:54,810] INFO [ReplicaStateMachine controllerId=101] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:37:54,812] INFO [ReplicaStateMachine controllerId=101] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:37:54,820] INFO [ReplicaStateMachine controllerId=101] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:37:54,821] DEBUG [ReplicaStateMachine controllerId=101] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:37:54,822] INFO [PartitionStateMachine controllerId=101] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:37:54,823] INFO [PartitionStateMachine controllerId=101] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:37:54,829] DEBUG [PartitionStateMachine controllerId=101] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:37:54,830] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:37:54,831] INFO [Controller id=101] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-09-03 16:37:54,845] INFO [Controller id=101] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,846] INFO [Controller id=101] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,846] INFO [Controller id=101] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,847] INFO [Controller id=101] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-03 16:37:54,849] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-03 16:37:54,886] INFO [Controller id=101] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-03 16:37:54,941] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:37:59,888] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:37:59,889] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:38:00,277] INFO [Controller id=101] Newly added brokers: 102, deleted brokers: , bounced brokers: , all live brokers: 101,102 (kafka.controller.KafkaController)
[2024-09-03 16:38:00,278] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:38:00,284] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:38:00,287] INFO [Controller id=101] New broker startup callback for 102 (kafka.controller.KafkaController)
[2024-09-03 16:38:00,292] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:00,294] DEBUG [Controller id=101] Register BrokerModifications handler for List(102) (kafka.controller.KafkaController)
[2024-09-03 16:38:00,298] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 25, 102 -> 45) (kafka.controller.KafkaController)
[2024-09-03 16:38:00,354] INFO [ControllerEventThread controllerId=102] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:38:00,379] DEBUG [Controller id=102] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:38:00,398] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:00,502] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:00,611] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9093 (id: 102 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 102 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:00,718] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:38:03,670] INFO [Controller id=101] Newly added brokers: 103, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-09-03 16:38:03,670] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:38:03,674] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:38:03,675] INFO [Controller id=101] New broker startup callback for 103 (kafka.controller.KafkaController)
[2024-09-03 16:38:03,676] DEBUG [Controller id=101] Register BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-09-03 16:38:03,678] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:03,679] INFO [Controller id=101] Updated broker epochs cache: HashMap(101 -> 25, 102 -> 45, 103 -> 61) (kafka.controller.KafkaController)
[2024-09-03 16:38:03,731] INFO [ControllerEventThread controllerId=103] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-03 16:38:03,757] DEBUG [Controller id=103] Broker 101 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:38:03,783] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:03,890] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:03,993] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker localhost:9094 (id: 103 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 103 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-03 16:38:04,097] INFO [RequestSendThread controllerId=101] Controller 101 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:39:41,401] INFO [Controller id=101] New topics: [Set(user-activity)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(user-activity,Some(vfWxa7H_Q-KJYT9np3qggg),Map(user-activity-0 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), user-activity-1 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), user-activity-2 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-03 16:39:41,403] INFO [Controller id=101] New partition creation callback for user-activity-0,user-activity-1,user-activity-2 (kafka.controller.KafkaController)
[2024-09-03 16:43:29,866] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:43:30,224] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:43:30,657] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-09-03 16:43:30,734] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:30,788] DEBUG [Controller id=101] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-09-03 16:43:30,832] TRACE [Controller id=101] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:30,890] DEBUG [Controller id=101] Topics not in preferred replica for broker 103 Map() (kafka.controller.KafkaController)
[2024-09-03 16:43:30,928] TRACE [Controller id=101] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:32,415] DEBUG [Controller id=102] Resigning (kafka.controller.KafkaController)
[2024-09-03 16:43:32,420] DEBUG [Controller id=102] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-03 16:43:32,421] INFO [PartitionStateMachine controllerId=102] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:32,424] INFO [ReplicaStateMachine controllerId=102] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:32,438] INFO [Controller id=102] Resigned (kafka.controller.KafkaController)
[2024-09-03 16:43:32,503] DEBUG [Controller id=101] Resigning (kafka.controller.KafkaController)
[2024-09-03 16:43:32,506] DEBUG [Controller id=101] Unregister BrokerModifications handler for Set(101, 102, 103) (kafka.controller.KafkaController)
[2024-09-03 16:43:32,509] INFO [PartitionStateMachine controllerId=101] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:32,511] INFO [ReplicaStateMachine controllerId=101] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:32,514] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,515] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,515] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,537] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,538] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,538] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,541] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,545] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,547] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,562] INFO [Controller id=101] Resigned (kafka.controller.KafkaController)
[2024-09-03 16:43:32,585] INFO [Controller id=102] 102 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-09-03 16:43:32,613] INFO [Controller id=102] Registering handlers (kafka.controller.KafkaController)
[2024-09-03 16:43:32,657] INFO [Controller id=102] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-03 16:43:32,666] DEBUG [Controller id=101] Broker 102 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:43:32,668] INFO [Controller id=102] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-03 16:43:32,672] INFO [Controller id=102] Initializing controller context (kafka.controller.KafkaController)
[2024-09-03 16:43:32,686] INFO [Controller id=102] Initialized broker epochs cache: HashMap(101 -> 79, 102 -> 76) (kafka.controller.KafkaController)
[2024-09-03 16:43:32,715] DEBUG [Controller id=102] Register BrokerModifications handler for Set(101, 102) (kafka.controller.KafkaController)
[2024-09-03 16:43:32,736] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 102 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:43:32,749] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:43:32,754] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,754] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,758] INFO [Controller id=102] Currently active brokers in the cluster: Set(101, 102) (kafka.controller.KafkaController)
[2024-09-03 16:43:32,758] INFO [Controller id=102] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-03 16:43:32,759] INFO [Controller id=102] Current list of topics in the cluster: HashSet(user-activity) (kafka.controller.KafkaController)
[2024-09-03 16:43:32,759] INFO [Controller id=102] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-03 16:43:32,765] INFO [Controller id=102] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-03 16:43:32,766] INFO [Controller id=102] List of topics ineligible for deletion: user-activity (kafka.controller.KafkaController)
[2024-09-03 16:43:32,766] INFO [Controller id=102] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-03 16:43:32,767] INFO [Topic Deletion Manager 102] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(user-activity) (kafka.controller.TopicDeletionManager)
[2024-09-03 16:43:32,768] INFO [Controller id=102] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-03 16:43:32,785] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,785] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9093 (id: 102 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:43:32,786] INFO [ReplicaStateMachine controllerId=102] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:32,804] INFO [ReplicaStateMachine controllerId=102] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:32,895] INFO [ReplicaStateMachine controllerId=102] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:33,020] DEBUG [ReplicaStateMachine controllerId=102] Started replica state machine with initial state -> HashMap([Topic=user-activity,Partition=0,Replica=101] -> OnlineReplica, [Topic=user-activity,Partition=1,Replica=101] -> OnlineReplica, [Topic=user-activity,Partition=2,Replica=102] -> OnlineReplica, [Topic=user-activity,Partition=2,Replica=103] -> OfflineReplica, [Topic=user-activity,Partition=1,Replica=102] -> OnlineReplica, [Topic=user-activity,Partition=2,Replica=101] -> OnlineReplica, [Topic=user-activity,Partition=0,Replica=102] -> OnlineReplica, [Topic=user-activity,Partition=0,Replica=103] -> OfflineReplica, [Topic=user-activity,Partition=1,Replica=103] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:33,020] INFO [PartitionStateMachine controllerId=102] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:33,050] INFO [PartitionStateMachine controllerId=102] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:33,100] DEBUG [Controller id=103] Resigning (kafka.controller.KafkaController)
[2024-09-03 16:43:33,117] DEBUG [Controller id=103] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-03 16:43:33,122] INFO [PartitionStateMachine controllerId=103] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:33,123] INFO [ReplicaStateMachine controllerId=103] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-03 16:43:33,126] INFO [Controller id=103] Resigned (kafka.controller.KafkaController)
[2024-09-03 16:43:33,126] DEBUG [PartitionStateMachine controllerId=102] Started partition state machine with initial state -> HashMap(user-activity-1 -> OnlinePartition, user-activity-2 -> OnlinePartition, user-activity-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-03 16:43:33,127] INFO [Controller id=102] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-09-03 16:43:33,157] INFO [Controller id=102] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:43:33,158] INFO [Controller id=102] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-03 16:43:33,158] INFO [Controller id=102] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-03 16:43:33,160] INFO [Controller id=102] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-03 16:43:33,162] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-03 16:43:33,200] DEBUG [Controller id=103] Broker 102 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-03 16:43:33,209] INFO [Controller id=102] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-03 16:43:33,231] INFO [Controller id=102] Newly added brokers: 103, deleted brokers: , bounced brokers: , all live brokers: 101,102,103 (kafka.controller.KafkaController)
[2024-09-03 16:43:33,231] DEBUG [Channel manager on controller 102]: Controller 102 trying to connect to broker 103 (kafka.controller.ControllerChannelManager)
[2024-09-03 16:43:33,236] INFO [RequestSendThread controllerId=102] Starting (kafka.controller.RequestSendThread)
[2024-09-03 16:43:33,239] INFO [Controller id=102] New broker startup callback for 103 (kafka.controller.KafkaController)
[2024-09-03 16:43:33,243] INFO [RequestSendThread controllerId=102] Controller 102 connected to localhost:9094 (id: 103 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-03 16:43:33,249] DEBUG [Controller id=102] Register BrokerModifications handler for List(103) (kafka.controller.KafkaController)
[2024-09-03 16:43:33,253] INFO [Controller id=102] Updated broker epochs cache: HashMap(101 -> 79, 102 -> 76, 103 -> 85) (kafka.controller.KafkaController)
[2024-09-03 16:43:33,358] DEBUG [Controller id=102] Updating ISRs for partitions: Set(user-activity-0). (kafka.controller.KafkaController)
[2024-09-03 16:43:33,381] DEBUG [Controller id=102] ISR for partition user-activity-0 updated to LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=103, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-03 16:43:33,394] DEBUG [Controller id=102] Updating ISRs for partitions: Set(user-activity-2). (kafka.controller.KafkaController)
[2024-09-03 16:43:33,415] DEBUG [Controller id=102] ISR for partition user-activity-2 updated to LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=103, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-03 16:43:33,424] DEBUG [Controller id=102] Updating ISRs for partitions: Set(user-activity-1). (kafka.controller.KafkaController)
[2024-09-03 16:43:33,440] DEBUG [Controller id=102] ISR for partition user-activity-1 updated to LeaderAndIsr(leader=102, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=103, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=3). (kafka.controller.KafkaController)
[2024-09-03 16:43:38,385] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:43:38,386] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:43:38,390] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-09-03 16:43:38,393] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:38,393] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 Map() (kafka.controller.KafkaController)
[2024-09-03 16:43:38,393] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:38,393] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 Map(user-activity-1 -> List(103, 102, 101)) (kafka.controller.KafkaController)
[2024-09-03 16:43:38,393] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 1.0 (kafka.controller.KafkaController)
[2024-09-03 16:43:38,394] INFO [Controller id=102] Starting replica leader election (PREFERRED) for partitions user-activity-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-03 16:43:38,420] INFO [Controller id=102] Partition user-activity-1 completed preferred replica leader election. New leader is 103 (kafka.controller.KafkaController)
[2024-09-03 16:44:13,409] DEBUG [Controller id=102] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-09-03 16:44:13,433] INFO [Controller id=102] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=103, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-09-03 16:44:13,519] DEBUG [Controller id=102] Read current producerId block ProducerIdsBlock(assignedBrokerId=103, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-09-03 16:44:13,533] INFO [Controller id=102] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-09-03 16:45:26,229] INFO [Controller id=102] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(MKFPADLyTKq1GzM_cIpkvQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=101,103,102, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=101,102,103, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=103,102,101, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=102,103,101, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=102,101,103, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=103,101,102, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-03 16:45:26,233] INFO [Controller id=102] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-09-03 16:48:38,417] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:48:38,418] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:48:38,419] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:53:38,415] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:53:38,415] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:53:38,417] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:58:38,413] INFO [Controller id=102] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-03 16:58:38,413] TRACE [Controller id=102] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] DEBUG [Controller id=102] Topics not in preferred replica for broker 101 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] TRACE [Controller id=102] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] DEBUG [Controller id=102] Topics not in preferred replica for broker 102 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] TRACE [Controller id=102] Leader imbalance ratio for broker 102 is 0.0 (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] DEBUG [Controller id=102] Topics not in preferred replica for broker 103 HashMap() (kafka.controller.KafkaController)
[2024-09-03 16:58:38,414] TRACE [Controller id=102] Leader imbalance ratio for broker 103 is 0.0 (kafka.controller.KafkaController)
