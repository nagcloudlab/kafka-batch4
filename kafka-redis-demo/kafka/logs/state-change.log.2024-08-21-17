[2024-08-21 18:34:28,655] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-8 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,656] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-35 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,656] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-47 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,656] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-38 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,656] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-17 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-11 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-29 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-32 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-41 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-23 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,657] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-14 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-20 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-44 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-5 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=102, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=102, brokerEpoch=-1), BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-26 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1), BrokerState(brokerId=102, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 101 with 8 become-leader and 8 become-follower partitions (state.change.logger)
[2024-08-21 18:34:28,658] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 102 with 8 become-leader and 8 become-follower partitions (state.change.logger)
[2024-08-21 18:34:28,659] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 103 with 0 become-leader and 16 become-follower partitions (state.change.logger)
[2024-08-21 18:34:28,659] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet(101, 102, 103) for 16 partitions (state.change.logger)
[2024-08-21 18:34:28,660] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2024-08-21 18:34:28,660] INFO [Controller id=101 epoch=5] Sending StopReplica request for 34 replicas to broker 103 (state.change.logger)
[2024-08-21 18:34:28,661] INFO [Broker id=101] Handling LeaderAndIsr request correlationId 57 from controller 101 for 16 partitions (state.change.logger)
[2024-08-21 18:34:28,663] INFO [Broker id=101] Stopped fetchers as part of LeaderAndIsr request correlationId 57 from controller 101 epoch 5 as part of the become-leader transition for 8 partitions (state.change.logger)
[2024-08-21 18:34:28,664] INFO [Broker id=101] Leader __consumer_offsets-2 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,677] INFO [Broker id=101] Leader __consumer_offsets-20 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,731] INFO [Broker id=101] Leader __consumer_offsets-38 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 38 with partition epoch 1, high watermark 38, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,786] INFO [Broker id=101] Leader __consumer_offsets-8 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,843] INFO [Broker id=101] Leader __consumer_offsets-26 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,888] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,891] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,891] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-25 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,891] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-37 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,901] INFO [Broker id=101] Leader __consumer_offsets-44 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,904] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,904] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-19 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,904] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-13 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,904] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-7 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,905] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-49 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-31 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,906] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-43 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:102,ISR:102,101,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-1 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:101,ISR:101,102,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 103 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:28,907] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 101 with 17 become-leader and 17 become-follower partitions (state.change.logger)
[2024-08-21 18:34:28,908] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 102 with 17 become-leader and 17 become-follower partitions (state.change.logger)
[2024-08-21 18:34:28,908] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet(101, 102, 103) for 34 partitions (state.change.logger)
[2024-08-21 18:34:28,908] INFO [Controller id=101 epoch=5] Sending StopReplica request for 34 replicas to broker 103 (state.change.logger)
[2024-08-21 18:34:28,927] INFO [Broker id=101] Leader __consumer_offsets-14 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,967] INFO [Broker id=101] Leader __consumer_offsets-32 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(103) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:28,994] INFO [Broker id=101] Follower __consumer_offsets-35 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-5 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-23 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-41 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-11 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-29 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:28,996] INFO [Broker id=101] Follower __consumer_offsets-47 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,008] INFO [Broker id=101] Follower __consumer_offsets-17 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Broker id=101] Stopped fetchers as part of become-follower request from controller 101 epoch 5 with correlation id 57 for 8 partitions (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-30 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-21 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-35 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-47 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,047] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-36 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-11 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-6 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-29 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-27 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,048] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-9 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,049] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-41 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,050] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-33 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,050] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-23 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,050] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-42 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-18 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-15 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-24 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-17 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-48 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-39 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-12 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,051] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-45 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,062] INFO [Controller id=101 epoch=5] Changed partition __consumer_offsets-5 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=101, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=101, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-08-21 18:34:29,062] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 101 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2024-08-21 18:34:29,062] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 102 with 0 become-leader and 25 become-follower partitions (state.change.logger)
[2024-08-21 18:34:29,062] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 103 with 0 become-leader and 25 become-follower partitions (state.change.logger)
[2024-08-21 18:34:29,062] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet(101, 102, 103) for 25 partitions (state.change.logger)
[2024-08-21 18:34:29,063] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2024-08-21 18:34:29,063] INFO [Controller id=101 epoch=5] Sending StopReplica request for 25 replicas to broker 102 (state.change.logger)
[2024-08-21 18:34:29,065] INFO [Broker id=101] Finished LeaderAndIsr request in 404ms correlationId 57 from controller 101 for 16 partitions (state.change.logger)
[2024-08-21 18:34:29,066] INFO [Broker id=101] Add 16 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 101 epoch 5 with correlation id 58 (state.change.logger)
[2024-08-21 18:34:29,067] INFO [Broker id=101] Handling LeaderAndIsr request correlationId 59 from controller 101 for 34 partitions (state.change.logger)
[2024-08-21 18:34:29,067] INFO [Broker id=101] Stopped fetchers as part of LeaderAndIsr request correlationId 59 from controller 101 epoch 5 as part of the become-leader transition for 17 partitions (state.change.logger)
[2024-08-21 18:34:29,068] INFO [Broker id=101] Leader __consumer_offsets-37 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 841 with partition epoch 1, high watermark 841, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,109] INFO [Broker id=101] Leader __consumer_offsets-7 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,168] INFO [Broker id=101] Leader __consumer_offsets-22 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,205] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-25 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-49 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-31 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-37 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-38 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-19 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,206] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-13 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-8 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-7 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-2 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-43 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-14 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-20 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-44 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-1 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,207] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-26 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-32 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 102 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 101 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Sending LeaderAndIsr request to broker 103 with 0 become-leader and 25 become-follower partitions (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet(101, 102, 103) for 25 partitions (state.change.logger)
[2024-08-21 18:34:29,208] INFO [Controller id=101 epoch=5] Sending StopReplica request for 25 replicas to broker 102 (state.change.logger)
[2024-08-21 18:34:29,215] INFO [Broker id=101] Leader __consumer_offsets-10 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,219] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,227] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,227] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,237] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,237] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,238] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,238] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,246] INFO [Broker id=101] Leader __consumer_offsets-31 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,248] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,258] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,259] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,259] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,259] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,269] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,279] INFO [Broker id=101] Leader __consumer_offsets-46 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,280] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,281] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,282] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,283] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] ERROR [Controller id=101 epoch=5] Controller 101 epoch 5 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:210)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-08-21 18:34:29,284] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2024-08-21 18:34:29,284] INFO [Controller id=101 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2024-08-21 18:34:29,300] INFO [Broker id=101] Leader __consumer_offsets-1 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,333] INFO [Broker id=101] Leader __consumer_offsets-16 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,353] INFO [Broker id=101] Leader __consumer_offsets-19 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,377] INFO [Broker id=101] Leader __consumer_offsets-34 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,412] INFO [Broker id=101] Leader __consumer_offsets-4 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,456] INFO [Broker id=101] Leader __consumer_offsets-25 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,499] INFO [Broker id=101] Leader __consumer_offsets-40 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 245 with partition epoch 1, high watermark 245, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,528] INFO [Broker id=101] Leader __consumer_offsets-43 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,571] INFO [Broker id=101] Leader __consumer_offsets-13 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,611] INFO [Broker id=101] Leader __consumer_offsets-28 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,641] INFO [Broker id=101] Leader __consumer_offsets-49 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [101,102], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 0. (state.change.logger)
[2024-08-21 18:34:29,672] INFO [Broker id=101] Follower __consumer_offsets-3 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-18 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-39 starts at leader epoch 1 from offset 23 with partition epoch 1 and high watermark 23. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-9 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-24 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-27 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-42 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-12 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-33 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-48 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,674] INFO [Broker id=101] Follower __consumer_offsets-21 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-36 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-6 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-45 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-15 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-30 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,675] INFO [Broker id=101] Follower __consumer_offsets-0 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 102. Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,676] INFO [Broker id=101] Stopped fetchers as part of become-follower request from controller 101 epoch 5 with correlation id 59 for 17 partitions (state.change.logger)
[2024-08-21 18:34:29,688] INFO [Broker id=101] Finished LeaderAndIsr request in 621ms correlationId 59 from controller 101 for 34 partitions (state.change.logger)
[2024-08-21 18:34:29,689] INFO [Broker id=101] Add 34 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 101 epoch 5 with correlation id 60 (state.change.logger)
[2024-08-21 18:34:29,689] INFO [Broker id=101] Handling LeaderAndIsr request correlationId 61 from controller 101 for 25 partitions (state.change.logger)
[2024-08-21 18:34:29,690] INFO [Broker id=101] Stopped fetchers as part of LeaderAndIsr request correlationId 61 from controller 101 epoch 5 as part of the become-leader transition for 25 partitions (state.change.logger)
[2024-08-21 18:34:29,690] INFO [Broker id=101] Leader __consumer_offsets-3 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,728] INFO [Broker id=101] Leader __consumer_offsets-18 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,774] INFO [Broker id=101] Leader __consumer_offsets-41 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,818] INFO [Broker id=101] Leader __consumer_offsets-29 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,855] INFO [Broker id=101] Leader __consumer_offsets-33 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,891] INFO [Broker id=101] Leader __consumer_offsets-48 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,934] INFO [Broker id=101] Leader __consumer_offsets-23 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:29,964] INFO [Broker id=101] Leader __consumer_offsets-11 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,013] INFO [Broker id=101] Leader __consumer_offsets-45 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,043] INFO [Broker id=101] Leader __consumer_offsets-15 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,079] INFO [Broker id=101] Leader __consumer_offsets-30 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,103] INFO [Broker id=101] Leader __consumer_offsets-0 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,138] INFO [Broker id=101] Leader __consumer_offsets-35 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,166] INFO [Broker id=101] Leader __consumer_offsets-5 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,199] INFO [Broker id=101] Leader __consumer_offsets-39 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 23 with partition epoch 2, high watermark 23, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,250] INFO [Broker id=101] Leader __consumer_offsets-9 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,288] INFO [Broker id=101] Leader __consumer_offsets-24 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,327] INFO [Broker id=101] Leader __consumer_offsets-27 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,369] INFO [Broker id=101] Leader __consumer_offsets-42 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,408] INFO [Broker id=101] Leader __consumer_offsets-12 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,459] INFO [Broker id=101] Leader __consumer_offsets-21 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,499] INFO [Broker id=101] Leader __consumer_offsets-36 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,525] INFO [Broker id=101] Leader __consumer_offsets-6 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,547] INFO [Broker id=101] Leader __consumer_offsets-47 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,582] INFO [Broker id=101] Leader __consumer_offsets-17 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(102) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,639] INFO [Broker id=101] Finished LeaderAndIsr request in 950ms correlationId 61 from controller 101 for 25 partitions (state.change.logger)
[2024-08-21 18:34:30,640] INFO [Broker id=101] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 101 epoch 5 with correlation id 62 (state.change.logger)
[2024-08-21 18:34:30,640] INFO [Broker id=101] Handling LeaderAndIsr request correlationId 63 from controller 101 for 25 partitions (state.change.logger)
[2024-08-21 18:34:30,641] INFO [Broker id=101] Stopped fetchers as part of LeaderAndIsr request correlationId 63 from controller 101 epoch 5 as part of the become-leader transition for 25 partitions (state.change.logger)
[2024-08-21 18:34:30,641] INFO [Broker id=101] Leader __consumer_offsets-37 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 841 with partition epoch 2, high watermark 841, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,669] INFO [Broker id=101] Leader __consumer_offsets-7 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,706] INFO [Broker id=101] Leader __consumer_offsets-22 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,740] INFO [Broker id=101] Leader __consumer_offsets-10 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,788] INFO [Broker id=101] Leader __consumer_offsets-44 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,836] INFO [Broker id=101] Leader __consumer_offsets-14 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,875] INFO [Broker id=101] Leader __consumer_offsets-19 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,921] INFO [Broker id=101] Leader __consumer_offsets-34 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,950] INFO [Broker id=101] Leader __consumer_offsets-4 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:30,979] INFO [Broker id=101] Leader __consumer_offsets-38 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 38 with partition epoch 2, high watermark 38, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,014] INFO [Broker id=101] Leader __consumer_offsets-8 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,052] INFO [Broker id=101] Leader __consumer_offsets-26 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,103] INFO [Broker id=101] Leader __consumer_offsets-49 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,149] INFO [Broker id=101] Leader __consumer_offsets-20 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,189] INFO [Broker id=101] Leader __consumer_offsets-31 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,226] INFO [Broker id=101] Leader __consumer_offsets-46 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,279] INFO [Broker id=101] Leader __consumer_offsets-1 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,321] INFO [Broker id=101] Leader __consumer_offsets-16 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,354] INFO [Broker id=101] Leader __consumer_offsets-2 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,399] INFO [Broker id=101] Leader __consumer_offsets-25 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,432] INFO [Broker id=101] Leader __consumer_offsets-40 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 245 with partition epoch 2, high watermark 245, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,463] INFO [Broker id=101] Leader __consumer_offsets-43 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,485] INFO [Broker id=101] Leader __consumer_offsets-13 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,507] INFO [Broker id=101] Leader __consumer_offsets-28 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,527] INFO [Broker id=101] Leader __consumer_offsets-32 with topic id Some(oXYYWgalT4mvC5N2HHxQug) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [101], adding replicas [] and removing replicas [] . Previous leader Some(101) and previous leader epoch was 1. (state.change.logger)
[2024-08-21 18:34:31,567] INFO [Broker id=101] Finished LeaderAndIsr request in 927ms correlationId 63 from controller 101 for 25 partitions (state.change.logger)
[2024-08-21 18:34:31,572] INFO [Broker id=101] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 101 epoch 5 with correlation id 64 (state.change.logger)
